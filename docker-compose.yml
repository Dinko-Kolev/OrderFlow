services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: pizza_user
      POSTGRES_PASSWORD: pizza_pass
      POSTGRES_DB: pizza_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pizza_user -d pizza_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pizza.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - default

  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: pizza_user
      DB_PASS: pizza_pass
      DB_NAME: pizza_db
      NODE_ENV: development
      # Email Configuration
      SMTP_HOST: mail.kolevhosting.com
      SMTP_PORT: 587
      SMTP_USER: bellavistapizza@kolevhosting.com
      SMTP_PASS: xurnam-gyqxoj-1vuznE
      SMTP_SECURE: false
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

volumes:
  pgdata:
  pgadmin_data: